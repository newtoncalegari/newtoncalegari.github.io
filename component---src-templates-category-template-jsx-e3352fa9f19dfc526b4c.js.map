{"version":3,"sources":["webpack:///./src/components/Post/index.jsx","webpack:///./src/components/CategoryTemplateDetails/index.jsx","webpack:///./src/templates/category-template.jsx"],"names":["Post","render","this","props","data","node","frontmatter","title","date","category","description","language","fields","slug","categorySlug","read_the_article","thumbnail","thumbnail_alt","className","lang","dateTime","moment","format","key","to","React","Component","CategoryTemplateDetails","items","pageContext","allMarkdownRemark","edges","forEach","post","push","CategoryTemplate","site","siteMetadata","Layout","Sidebar","pageQuery"],"mappings":"+LAKMA,E,gLACJC,OAAA,WAAU,IAAD,EAOHC,KAAKC,MAAMC,KAAKC,KAAKC,YALvBC,EAFK,EAELA,MACAC,EAHK,EAGLA,KACAC,EAJK,EAILA,SACAC,EALK,EAKLA,YACAC,EANK,EAMLA,SANK,EAQwBT,KAAKC,MAAMC,KAAKC,KAAKO,OAA5CC,EARD,EAQCA,KAAMC,EARP,EAQOA,aAIRC,GAHYb,KAAKC,MAAMC,KAAKC,KAAKC,YAAYU,UAC7Bd,KAAKC,MAAMC,KAAKC,KAAKC,YAAYW,cAEhB,OAAbN,EAAqB,mBAAqB,iBAEpE,OACE,yBAAKO,UAAU,OAAOC,KAAMR,GAC1B,yBAAKO,UAAU,cACb,0BACEA,UAAU,kBACVE,SAAUC,IAAOb,GAAMc,OAAO,iBAE7BD,IAAOb,GAAMc,OAAO,gBAEvB,0BAAMJ,UAAU,uBAChB,0BAAMA,UAAU,sBAAsBK,IAAKT,GACzC,kBAAC,OAAD,CAAMU,GAAIV,EAAcI,UAAU,4BAC/BT,KAIP,wBAAIS,UAAU,eACZ,kBAAC,OAAD,CAAMA,UAAU,mBAAmBM,GAAIX,GACpCN,IAGL,uBAAGW,UAAU,qBAEVR,GAEH,kBAAC,OAAD,CAAMQ,UAAU,iBAAiBM,GAAIX,GAClCE,K,GAzCQU,IAAMC,WAgDV1B,O,yKC5BA2B,E,gLArBb1B,OAAA,WACE,IAAM2B,EAAQ,GACNnB,EAAaP,KAAKC,MAAM0B,YAAxBpB,SAMR,OALcP,KAAKC,MAAMC,KAAK0B,kBAAkBC,MAC1CC,SAAQ,SAAAC,GACZL,EAAMM,KAAK,kBAAClC,EAAA,EAAD,CAAMI,KAAM6B,EAAMV,IAAKU,EAAK5B,KAAKO,OAAOC,WAInD,yBAAKK,UAAU,WACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,QACb,wBAAIA,UAAU,eAAeT,GAC7B,yBAAKS,UAAU,cAAcU,O,GAdHH,IAAMC,W,ICItCS,E,gLACJlC,OAAA,WAAU,IACAM,EAAUL,KAAKC,MAAMC,KAAKgC,KAAKC,aAA/B9B,MACAE,EAAaP,KAAKC,MAAM0B,YAAxBpB,SAER,OACE,kBAAC6B,EAAA,EAAD,KACE,6BACE,kBAAC,IAAD,CAAQ/B,MAAUE,EAAL,MAAmBF,IAChC,kBAACgC,EAAA,EAAYrC,KAAKC,OAClB,kBAAC,EAA4BD,KAAKC,U,GAVbsB,IAAMC,WAmBxBc,GAFEL,YAEO","file":"component---src-templates-category-template-jsx-e3352fa9f19dfc526b4c.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport moment from 'moment'\nimport './style.scss'\n\nclass Post extends React.Component {\n  render() {\n    const {\n      title,\n      date,\n      category,\n      description,\n      language,\n    } = this.props.data.node.frontmatter\n    const { slug, categorySlug } = this.props.data.node.fields\n    const thumbnail = this.props.data.node.frontmatter.thumbnail\n    const thumbnail_alt = this.props.data.node.frontmatter.thumbnail_alt\n\n    const read_the_article = (language === 'en') ? 'Read the article' : 'Leia o artigo'\n\n    return (\n      <div className=\"post\" lang={language}>\n        <div className=\"post__meta\">\n          <time\n            className=\"post__meta-time\"\n            dateTime={moment(date).format('MMMM D, YYYY')}\n          >\n            {moment(date).format('DD MMM YYYY')}\n          </time>\n          <span className=\"post__meta-divider\" />\n          <span className=\"post__meta-category\" key={categorySlug}>\n            <Link to={categorySlug} className=\"post__meta-category-link\">\n              {category}\n            </Link>\n          </span>\n        </div>\n        <h2 className=\"post__title\">\n          <Link className=\"post__title-link\" to={slug}>\n            {title}\n          </Link>\n        </h2>\n        <p className=\"post__description\">\n          \n          {description}\n        </p>\n        <Link className=\"post__readmore\" to={slug}>\n          {read_the_article}\n        </Link>\n      </div>\n    )\n  }\n}\n\nexport default Post\n","import React from 'react'\nimport Post from '../Post'\n\nclass CategoryTemplateDetails extends React.Component {\n  render() {\n    const items = []\n    const { category } = this.props.pageContext\n    const posts = this.props.data.allMarkdownRemark.edges\n    posts.forEach(post => {\n      items.push(<Post data={post} key={post.node.fields.slug} />)\n    })\n\n    return (\n      <div className=\"content\">\n        <div className=\"content__inner\">\n          <div className=\"page\">\n            <h1 className=\"page__title\">{category}</h1>\n            <div className=\"page__body\">{items}</div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default CategoryTemplateDetails\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/Layout'\nimport Sidebar from '../components/Sidebar'\nimport CategoryTemplateDetails from '../components/CategoryTemplateDetails'\n\nclass CategoryTemplate extends React.Component {\n  render() {\n    const { title } = this.props.data.site.siteMetadata\n    const { category } = this.props.pageContext\n\n    return (\n      <Layout>\n        <div>\n          <Helmet title={`${category} - ${title}`} />\n          <Sidebar {...this.props} />\n          <CategoryTemplateDetails {...this.props} />\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default CategoryTemplate\n\nexport const pageQuery = graphql`\n  query CategoryPage($category: String) {\n    site {\n      siteMetadata {\n        title\n        subtitle\n        copyright\n        menu {\n          label\n          path\n        }\n        author {\n          name\n          email\n          telegram\n          twitter\n          github\n          rss\n          vk\n        }\n      }\n    }\n    allMarkdownRemark(\n      limit: 1000\n      filter: {\n        frontmatter: {\n          category: { eq: $category }\n          layout: { eq: \"post\" }\n          draft: { ne: true }\n        }\n      }\n      sort: { order: DESC, fields: [frontmatter___date] }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n            categorySlug\n          }\n          frontmatter {\n            title\n            date\n            category\n            description\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}