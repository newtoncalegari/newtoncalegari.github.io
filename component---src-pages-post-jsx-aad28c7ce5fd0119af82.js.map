{"version":3,"sources":["webpack:///./src/components/Post/index.jsx","webpack:///./src/components/Talk/index.jsx","webpack:///./src/pages/post.jsx"],"names":["Post","render","this","props","data","node","frontmatter","title","date","category","description","fields","slug","categorySlug","thumbnail","thumbnail_alt","className","dateTime","moment","format","key","to","React","Component","PostRoute","items","site","siteMetadata","subtitle","siteUrl","allMarkdownRemark","edges","forEach","post","push","name","content","rel","href","pageQuery"],"mappings":"8LAKMA,E,gLACJC,OAAA,WAAU,IAAD,EAMHC,KAAKC,MAAMC,KAAKC,KAAKC,YAJvBC,EAFK,EAELA,MACAC,EAHK,EAGLA,KACAC,EAJK,EAILA,SACAC,EALK,EAKLA,YALK,EAOwBR,KAAKC,MAAMC,KAAKC,KAAKM,OAA5CC,EAPD,EAOCA,KAAMC,EAPP,EAOOA,aACIX,KAAKC,MAAMC,KAAKC,KAAKC,YAAYQ,UAC7BZ,KAAKC,MAAMC,KAAKC,KAAKC,YAAYS,cAEvD,OACE,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,0BACEA,UAAU,kBACVC,SAAUC,IAAOV,GAAMW,OAAO,iBAE7BD,IAAOV,GAAMW,OAAO,gBAEvB,0BAAMH,UAAU,uBAChB,0BAAMA,UAAU,sBAAsBI,IAAKP,GACzC,kBAAC,OAAD,CAAMQ,GAAIR,EAAcG,UAAU,4BAC/BP,KAIP,wBAAIO,UAAU,eACZ,kBAAC,OAAD,CAAMA,UAAU,mBAAmBK,GAAIT,GACpCL,IAGL,uBAAGS,UAAU,qBAEVN,GAEH,kBAAC,OAAD,CAAMM,UAAU,iBAAiBK,GAAIT,GAArC,kB,GArCWU,IAAMC,WA6CVvB,O,sGC7CIsB,IAAMC,W,qLCGnBC,E,gLACJvB,OAAA,WACE,IAAMwB,EAAQ,GADP,EAE8BvB,KAAKC,MAAMC,KAAKsB,KAAKC,aAAlDpB,EAFD,EAECA,MAAOqB,EAFR,EAEQA,SAAUC,EAFlB,EAEkBA,QAMzB,OALc3B,KAAKC,MAAMC,KAAK0B,kBAAkBC,MAC1CC,SAAQ,SAAAC,GACZR,EAAMS,KAAK,kBAAC,IAAD,CAAM9B,KAAM6B,EAAMb,IAAKa,EAAK5B,KAAKM,OAAOC,WAInD,kBAAC,IAAD,KACE,6BACE,kBAAC,IAAD,KACE,+BAAQL,GACR,0BAAM4B,KAAK,cAAcC,QAASR,IAClC,0BAAMS,IAAI,YAAYC,KAAMT,KAE9B,kBAAC,IAAY3B,KAAKC,OAClB,yBAAKa,UAAU,WACb,yBAAKA,UAAU,kBAAkBS,O,GAnBrBH,IAAMC,WA2BfC,YAER,IAAMe,EAAS,c","file":"component---src-pages-post-jsx-aad28c7ce5fd0119af82.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport moment from 'moment'\nimport './style.scss'\n\nclass Post extends React.Component {\n  render() {\n    const {\n      title,\n      date,\n      category,\n      description,\n    } = this.props.data.node.frontmatter\n    const { slug, categorySlug } = this.props.data.node.fields\n    const thumbnail = this.props.data.node.frontmatter.thumbnail\n    const thumbnail_alt = this.props.data.node.frontmatter.thumbnail_alt\n\n    return (\n      <div className=\"post\">\n        <div className=\"post__meta\">\n          <time\n            className=\"post__meta-time\"\n            dateTime={moment(date).format('MMMM D, YYYY')}\n          >\n            {moment(date).format('DD MMM YYYY')}\n          </time>\n          <span className=\"post__meta-divider\" />\n          <span className=\"post__meta-category\" key={categorySlug}>\n            <Link to={categorySlug} className=\"post__meta-category-link\">\n              {category}\n            </Link>\n          </span>\n        </div>\n        <h2 className=\"post__title\">\n          <Link className=\"post__title-link\" to={slug}>\n            {title}\n          </Link>\n        </h2>\n        <p className=\"post__description\">\n          \n          {description}\n        </p>\n        <Link className=\"post__readmore\" to={slug}>\n          Ler o artigo\n        </Link>\n      </div>\n    )\n  }\n}\n\nexport default Post\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport moment from 'moment'\nimport './style.scss'\n\nclass Talk extends React.Component {\n  render() {\n    const {\n      title,\n      date,\n      category,\n      description,\n    } = this.props.data.node.frontmatter\n    const { slug, categorySlug } = this.props.data.node.fields\n    const thumbnail = this.props.data.node.frontmatter.thumbnail\n    const thumbnail_alt = this.props.data.node.frontmatter.thumbnail_alt\n\n    return (\n      <div className=\"post\">\n        <div className=\"post__meta\">\n          <time\n            className=\"post__meta-time\"\n            dateTime={moment(date).format('MMMM D, YYYY')}\n          >\n            {moment(date).format('DD MMM YYYY')}\n          </time>\n          <span className=\"post__meta-divider\" />\n          <span className=\"post__meta-category\" key={categorySlug}>\n            <Link to={categorySlug} className=\"post__meta-category-link\">\n              {category}\n            </Link>\n          </span>\n        </div>\n        <h2 className=\"post__title\">\n          <Link className=\"post__title-link\" to={slug}>\n            {title}\n          </Link>\n        </h2>\n        <p className=\"post__description\">\n          <img src=\"{thumbnail}\" alt=\"{thumbnail_alt}\" />\n          {description}\n        </p>\n        <Link className=\"post__readmore\" to={slug}>\n          Ler o artigo\n        </Link>\n      </div>\n    )\n  }\n}\n\nexport default Talk\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/Layout'\nimport Post from '../components/Post'\nimport Talk from '../components/Talk'\nimport Sidebar from '../components/Sidebar'\n\nclass PostRoute extends React.Component {\n  render() {\n    const items = []\n    const { title, subtitle, siteUrl } = this.props.data.site.siteMetadata\n    const posts = this.props.data.allMarkdownRemark.edges\n    posts.forEach(post => {\n      items.push(<Post data={post} key={post.node.fields.slug} />)\n    })\n    \n    return (\n      <Layout>\n        <div>\n          <Helmet>\n            <title>{title}</title>\n            <meta name=\"description\" content={subtitle} />\n            <link rel=\"canonical\" href={siteUrl} />\n          </Helmet>\n          <Sidebar {...this.props} />\n          <div className=\"content\">\n            <div className=\"content__inner\">{items}</div>\n          </div>\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default PostRoute\n\nexport const pageQuery = graphql`\n  query PostTypeNotEqualTalk {\n    site {\n      siteMetadata {\n        title\n        subtitle\n        copyright\n        siteUrl\n        menu {\n          label\n          path\n        }\n        author {\n          name\n          email\n          telegram\n          twitter\n          github\n          rss\n          vk\n        }\n      }\n    }\n    allMarkdownRemark(\n      limit: 1000\n      filter: {\n        frontmatter: {\n          layout: { eq: \"post\" }\n          draft: { ne: true }\n          type: { ne: \"talk\" }\n        }\n      }\n      sort: { order: DESC, fields: [frontmatter___date] }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n            categorySlug\n          }\n          frontmatter {\n            title\n            date\n            category\n            description\n            thumbnail\n            thumbnail_alt\n            path         \n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}